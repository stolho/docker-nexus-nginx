upstream nexus {
  server localhost:8081;
}

upstream registry {
  server localhost:5043;
}

upstream registry-01 {
  server localhost:5044;
}

server {
  listen 443 ssl;
  server_name site.com;

  #SSL
  ssl on;
  ssl_certificate /certs/cert.crt;
  ssl_certificate_key /certs/cert.key;

  # Strong SSL Security on nginx https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  # disable any limits to avoid HTTP 413 for large file uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
  chunked_transfer_encoding on;

  location / {
    # redirect to docker registry
    if ($http_user_agent ~ docker) {
      proxy_pass  http://registry;
    }

    proxy_pass http://nexus;
    proxy_set_header  Host  $http_host; # required for docker client's sake
    proxy_set_header  X-Real-IP $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto https;
    proxy_read_timeout  900;
  }

}

server {
  listen 443 ssl;
  server_name repo1.site.com;

  #SSL
  ssl on;
  ssl_certificate /certs/cert.crt;
  ssl_certificate_key /certs/cert.key;

  # Strong SSL Security on nginx https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  # disable any limits to avoid HTTP 413 for large file uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
  chunked_transfer_encoding on;

  location / {
    # redirect to docker registry
    if ($http_user_agent ~ docker) {
      proxy_pass  http://registry-one;
    }

    proxy_pass http://nexus;
    proxy_set_header  Host  $http_host; # required for docker client's sake
    proxy_set_header  X-Real-IP $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto https;
    proxy_read_timeout  900;
  }
}
